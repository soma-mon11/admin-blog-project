{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar getSetIterator = require('../internals/get-set-iterator');\n\nvar iterate = require('../internals/iterate');\n\nvar $TypeError = TypeError; // `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  reduce: function reduce(callbackfn\n  /* , initialValue */\n  ) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aCallable(callbackfn);\n    iterate(iterator, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, value, set);\n      }\n    }, {\n      IS_ITERATOR: true\n    });\n    if (noInitial) throw $TypeError('Reduce of empty set with no initial value');\n    return accumulator;\n  }\n});","map":{"version":3,"names":["$","require","aCallable","anObject","getSetIterator","iterate","$TypeError","TypeError","target","proto","real","forced","reduce","callbackfn","set","iterator","noInitial","arguments","length","accumulator","undefined","value","IS_ITERATOR"],"sources":["C:/Users/RALPC-011/Desktop/scratch_admin/node_modules/core-js/modules/esnext.set.reduce.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getSetIterator = require('../internals/get-set-iterator');\nvar iterate = require('../internals/iterate');\n\nvar $TypeError = TypeError;\n\n// `Set.prototype.reduce` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Set', proto: true, real: true, forced: true }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var set = anObject(this);\n    var iterator = getSetIterator(set);\n    var noInitial = arguments.length < 2;\n    var accumulator = noInitial ? undefined : arguments[1];\n    aCallable(callbackfn);\n    iterate(iterator, function (value) {\n      if (noInitial) {\n        noInitial = false;\n        accumulator = value;\n      } else {\n        accumulator = callbackfn(accumulator, value, value, set);\n      }\n    }, { IS_ITERATOR: true });\n    if (noInitial) throw $TypeError('Reduce of empty set with no initial value');\n    return accumulator;\n  }\n});\n"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAD,CAArB;;AAEA,IAAIK,UAAU,GAAGC,SAAjB,C,CAEA;AACA;;AACAP,CAAC,CAAC;EAAEQ,MAAM,EAAE,KAAV;EAAiBC,KAAK,EAAE,IAAxB;EAA8BC,IAAI,EAAE,IAApC;EAA0CC,MAAM,EAAE;AAAlD,CAAD,EAA2D;EAC1DC,MAAM,EAAE,SAASA,MAAT,CAAgBC;EAAW;EAA3B,EAAiD;IACvD,IAAIC,GAAG,GAAGX,QAAQ,CAAC,IAAD,CAAlB;IACA,IAAIY,QAAQ,GAAGX,cAAc,CAACU,GAAD,CAA7B;IACA,IAAIE,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnC;IACA,IAAIC,WAAW,GAAGH,SAAS,GAAGI,SAAH,GAAeH,SAAS,CAAC,CAAD,CAAnD;IACAf,SAAS,CAACW,UAAD,CAAT;IACAR,OAAO,CAACU,QAAD,EAAW,UAAUM,KAAV,EAAiB;MACjC,IAAIL,SAAJ,EAAe;QACbA,SAAS,GAAG,KAAZ;QACAG,WAAW,GAAGE,KAAd;MACD,CAHD,MAGO;QACLF,WAAW,GAAGN,UAAU,CAACM,WAAD,EAAcE,KAAd,EAAqBA,KAArB,EAA4BP,GAA5B,CAAxB;MACD;IACF,CAPM,EAOJ;MAAEQ,WAAW,EAAE;IAAf,CAPI,CAAP;IAQA,IAAIN,SAAJ,EAAe,MAAMV,UAAU,CAAC,2CAAD,CAAhB;IACf,OAAOa,WAAP;EACD;AAjByD,CAA3D,CAAD"},"metadata":{},"sourceType":"script"}