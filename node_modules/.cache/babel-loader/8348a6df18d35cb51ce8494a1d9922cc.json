{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar isCallable = require('../internals/is-callable');\n\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar isRegExp = require('../internals/is-regexp');\n\nvar toString = require('../internals/to-string');\n\nvar getMethod = require('../internals/get-method');\n\nvar getRegExpFlags = require('../internals/regexp-get-flags');\n\nvar getSubstitution = require('../internals/get-substitution');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function stringIndexOf(string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n}; // `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n\n\n$({\n  target: 'String',\n  proto: true\n}, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n\n      replacer = getMethod(searchValue, REPLACE);\n\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n\n    while (position !== -1) {\n      replacement = functionalReplace ? toString(replaceValue(searchString, position, string)) : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n\n    return result;\n  }\n});","map":{"version":3,"names":["$","require","call","uncurryThis","requireObjectCoercible","isCallable","isNullOrUndefined","isRegExp","toString","getMethod","getRegExpFlags","getSubstitution","wellKnownSymbol","IS_PURE","REPLACE","$TypeError","TypeError","indexOf","replace","stringSlice","slice","max","Math","stringIndexOf","string","searchValue","fromIndex","length","target","proto","replaceAll","replaceValue","O","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","replacement","position","endOfLastMatch","result","undefined"],"sources":["C:/Users/RALPC-011/Desktop/scratch_admin/node_modules/core-js/modules/es.string.replace-all.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}