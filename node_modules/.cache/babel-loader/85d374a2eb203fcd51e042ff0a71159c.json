{"ast":null,"code":"var deepObjectsMerge = function deepObjectsMerge(target, source) {\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n  for (var _i = 0, _Object$keys = Object.keys(source); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n\n    if (source[key] instanceof Object) {\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]));\n    }\n  } // Join `target` and modified `source`\n\n\n  Object.assign(target || {}, source);\n  return target;\n};\n\nexport default deepObjectsMerge;","map":{"version":3,"names":["deepObjectsMerge","target","source","Object","keys","key","assign"],"sources":["C:/Users/RALPC-011/Desktop/scratch_admin/node_modules/@coreui/utils/src/deep-objects-merge.js"],"sourcesContent":["const deepObjectsMerge = (target, source) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object) {\r\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\r\n    }\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source)\r\n  return target\r\n}\r\n\r\nexport default deepObjectsMerge\r\n"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,MAAT,EAAoB;EAC3C;EACA,gCAAkBC,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAlB,kCAAuC;IAAlC,IAAMG,GAAG,mBAAT;;IACH,IAAIH,MAAM,CAACG,GAAD,CAAN,YAAuBF,MAA3B,EAAmC;MACjCA,MAAM,CAACG,MAAP,CAAcJ,MAAM,CAACG,GAAD,CAApB,EAA2BL,gBAAgB,CAACC,MAAM,CAACI,GAAD,CAAP,EAAcH,MAAM,CAACG,GAAD,CAApB,CAA3C;IACD;EACF,CAN0C,CAQ3C;;;EACAF,MAAM,CAACG,MAAP,CAAcL,MAAM,IAAI,EAAxB,EAA4BC,MAA5B;EACA,OAAOD,MAAP;AACD,CAXD;;AAaA,eAAeD,gBAAf"},"metadata":{},"sourceType":"module"}