{"ast":null,"code":"var toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError; // `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\n\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw $TypeError(\"Can't convert number to bigint\"); // eslint-disable-next-line es/no-bigint -- safe\n\n  return BigInt(prim);\n};","map":{"version":3,"names":["toPrimitive","require","$TypeError","TypeError","module","exports","argument","prim","BigInt"],"sources":["C:/Users/RALPC-011/Desktop/scratch_admin/node_modules/core-js/internals/to-big-int.js"],"sourcesContent":["var toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAAzB;;AAEA,IAAIC,UAAU,GAAGC,SAAjB,C,CAEA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoB;EACnC,IAAIC,IAAI,GAAGP,WAAW,CAACM,QAAD,EAAW,QAAX,CAAtB;EACA,IAAI,OAAOC,IAAP,IAAe,QAAnB,EAA6B,MAAML,UAAU,CAAC,gCAAD,CAAhB,CAFM,CAGnC;;EACA,OAAOM,MAAM,CAACD,IAAD,CAAb;AACD,CALD"},"metadata":{},"sourceType":"script"}